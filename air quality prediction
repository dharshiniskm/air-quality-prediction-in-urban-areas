import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error, r2_score
import time

print("Loading dataset...")
file_path = 'AirQualityUCI.csv'  # Make sure this file is in the working directory
data = pd.read_csv(file_path, sep=';', decimal=',', encoding='latin1')
data = data.iloc[:, :-2]  # Drop last two empty columns

print(f"Dataset shape: {data.shape}")

print("Cleaning dataset...")
data.replace(-200, np.nan, inplace=True)
data.fillna(method='ffill', inplace=True)

print("Selecting features and target...")
X = data.drop(['Date', 'Time', 'CO(GT)'], axis=1)
y = data['CO(GT)']

print(f"Splitting dataset...")
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

print("Training Random Forest Regressor...")
model = RandomForestRegressor(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

print("Evaluating model...")
y_pred = model.predict(X_test)
rmse = np.sqrt(mean_squared_error(y_test, y_pred))
r2 = r2_score(y_test, y_pred)

print(f"Root Mean Squared Error (RMSE): {rmse:.3f}")
print(f"R^2 Score: {r2:.3f}")

plt.figure(figsize=(8, 6))
plt.scatter(y_test, y_pred, alpha=0.6, edgecolor='k')
plt.xlabel("True CO(GT)")
plt.ylabel("Predicted CO(GT)")
plt.title("True vs Predicted CO Concentration")
plt.plot([y_test.min(), y_test.max()], [y_test.min(), y_test.max()], 'r--')
plt.show()

print("Simulating real-time air quality predictions:\n")
for i in range(10):
    new_sample = X_test.iloc[[i]]  
    prediction = model.predict(new_sample)
    print(f"Data point {i+1}: Predicted CO(GT) = {prediction[0]:.3f}")
    time.sleep(1)

